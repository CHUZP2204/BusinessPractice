//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PracticaIIICO.BD
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class MotoRepuestosMakoEntities : DbContext
    {
        public MotoRepuestosMakoEntities()
            : base("name=MotoRepuestosMakoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<MarcaTbl> MarcaTbl { get; set; }
        public DbSet<Productos> Productos { get; set; }
        public DbSet<ServiciosTbl> ServiciosTbl { get; set; }
        public DbSet<Tipo_ServicioTbl> Tipo_ServicioTbl { get; set; }
        public DbSet<TipoUsuario> TipoUsuario { get; set; }
        public DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual int sp_Elimina_Marca(Nullable<int> idMarca)
        {
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("idMarca", idMarca) :
                new ObjectParameter("idMarca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Elimina_Marca", idMarcaParameter);
        }
    
        public virtual int sp_Inserta_Marcas(string nombreMarca, string descripcionMarca)
        {
            var nombreMarcaParameter = nombreMarca != null ?
                new ObjectParameter("nombreMarca", nombreMarca) :
                new ObjectParameter("nombreMarca", typeof(string));
    
            var descripcionMarcaParameter = descripcionMarca != null ?
                new ObjectParameter("descripcionMarca", descripcionMarca) :
                new ObjectParameter("descripcionMarca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Inserta_Marcas", nombreMarcaParameter, descripcionMarcaParameter);
        }
    
        public virtual int sp_Modifica_Marcas(Nullable<int> idMarca, string nombreMarca, string descripcionMarca)
        {
            var idMarcaParameter = idMarca.HasValue ?
                new ObjectParameter("idMarca", idMarca) :
                new ObjectParameter("idMarca", typeof(int));
    
            var nombreMarcaParameter = nombreMarca != null ?
                new ObjectParameter("nombreMarca", nombreMarca) :
                new ObjectParameter("nombreMarca", typeof(string));
    
            var descripcionMarcaParameter = descripcionMarca != null ?
                new ObjectParameter("descripcionMarca", descripcionMarca) :
                new ObjectParameter("descripcionMarca", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Modifica_Marcas", idMarcaParameter, nombreMarcaParameter, descripcionMarcaParameter);
        }
    
        public virtual ObjectResult<sp_Retorna_Marcas_Result> sp_Retorna_Marcas(string nombreMarca, string descripcion)
        {
            var nombreMarcaParameter = nombreMarca != null ?
                new ObjectParameter("nombreMarca", nombreMarca) :
                new ObjectParameter("nombreMarca", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("descripcion", descripcion) :
                new ObjectParameter("descripcion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Retorna_Marcas_Result>("sp_Retorna_Marcas", nombreMarcaParameter, descripcionParameter);
        }
    }
}
